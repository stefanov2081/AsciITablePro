.ascii-table-container {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    padding: 0 1rem;

    .col {
        padding: 0;
        min-width: 150px;
    }
}

.ascii-table {
    display: block;
    margin: 0;

    thead,
    tbody,
    tr {
        display: block;
    }

    thead {
        tr {
            background: rgba($color-white, .75);
        }

        th {
            border: none;
            font-weight: 600;
        }
    }

    tbody {
        tr {
            border-bottom: 1px solid rgba($separator-color, .1);
            background: $color-white;

            &:hover {
                td {
                    background: $color-active;
                    color: $color-white;
                    cursor: pointer;
                }

                &::before {
                    background: rgba($color-white, .5);
                }
            }
        }
    }

    th,
    td {
        display: inline-block;
        height: 32px;
        padding: .25rem .75rem;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;

        &:first-of-type {
            min-width: 60px;
            width: 30%;
        }

        &:last-of-type {
            max-width: calc(100% - 60px);
            width: 70%;
        }
    }

    &.col + .col {
        border-left: 1px solid $separator-color;
    }
}

.ascii-table-legend,
.ascii-table {
    $control-char: #FFD54F;
    $punctuation-char: #64B5F6;
    $numeric-char: #9575CD;
    $alphabetic-upper: #81C784;
    $alphabetic-low: #AED581;
    $extended-punct: #E0E0E0;
    $graphic-char: #FFB74D;
    $international-char: #FF8A65;
    $udefined: #90A4AE;
    $color-transparency: 1;
    $background-alpha: 1;

    .list-inline-item {
        margin-bottom: 10px;
    }

    .list-inline-item .fas {
        margin: 0 5px 0 0;
        line-height: .9rem;
        -webkit-box-shadow: 0px 0 0 1px $shadow-color;
        box-shadow: 0px 0 0 1px $shadow-color;
    }

    .control-character .fas {
        color: rgba($control-char, $color-transparency);
    }

    .punctuation .fas {
        color: rgba($punctuation-char, $color-transparency);
    }

    .numeric-digit .fas {
        color: rgba($numeric-char, $color-transparency);
    }

    .alphabetic-uppercase .fas {
        color: rgba($alphabetic-upper, $color-transparency);
    }

    .alphabetic-lowercase .fas {
        color: rgba($alphabetic-low, $color-transparency);
    }

    .extended-punctuation .fas {
        color: rgba($extended-punct, $color-transparency);
    }

    .graphic-character .fas {
        color: rgba($graphic-char, $color-transparency);
    }

    .international .fas {
        color: rgba($international-char, $color-transparency);
    }

    .undefined .fas {
        color: rgba($udefined, $color-transparency);
    }

    tbody {
        tr {
            position: relative;

            &::before {
                content: '';
                width: 3px;
                position: absolute;
                top: 0;
                bottom: 0;
                left: 0;
            }
        }

        .control-character {
            &::before {
                background: rgba($control-char, $background-alpha);
            }
        }

        .punctuation {
            &::before {
                background: rgba($punctuation-char, $background-alpha);
            }
        }

        .numeric-digit {
            &::before {
                background: rgba($numeric-char, $background-alpha);
            }
        }

        .alphabetic-uppercase {
            &::before {
                background: rgba($alphabetic-upper, $background-alpha);
            }
        }

        .alphabetic-lowercase {
            &::before {
                background: rgba($alphabetic-low, $background-alpha);
            }
        }

        .extended-punctuation {
            &::before {
                background: rgba($extended-punct, $background-alpha);
            }
        }

        .graphic-character {
            &::before {
                background: rgba($graphic-char, $background-alpha);
            }
        }

        .international {
            &::before {
                background: rgba($international-char, $background-alpha);
            }
        }

        .undefined {
            &::before {
                background: rgba($udefined, $background-alpha);
            }
        }
    }
}
